apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-server
  namespace: egs4
spec:
  replicas: 5
  selector:
    matchLabels:
      app: frontend-server
  template:
    metadata:
      labels:
        app: frontend-server
    spec:
      containers:
        - name: frontend-server
          image: registry.deti:5000/ricardo-84730/egs-frontend-server:betav7
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: nginx

# Create Service for APP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-server
  namespace: egs4
spec:
  selector:
    app: frontend-server
  ports:
    - port: 8080
      targetPort: 8080

# Configure Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: egs4-k3s
  labels:
    name: egs4-k3s
  namespace: egs4
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"

spec:
  rules:
    - host: egs4.k3s
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: frontend-nginx
                port:
                  number: 80